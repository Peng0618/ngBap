import numpy as np
import pandas as pd
import lingam
import time
import sys
import csv
import os

# runInd indicates the sim setting
# simIndex indicates the replication number
runInd = int(sys.argv[1])
simIndex = int(sys.argv[2])

# read data generated by R file orderingComparison.R
Y = pd.read_csv('temp/bap_obs_'+str(runInd)+'_'+str(simIndex)+'.csv')

runTime = [0, 0, 0]
p = len(Y.columns)

# fit model to data
model05 = lingam.RCD(cor_alpha= .05, ind_alpha=.05, shapiro_alpha=.05)
model01 = lingam.RCD(cor_alpha= .01, ind_alpha=.01, shapiro_alpha=.01)
model001 = lingam.RCD(cor_alpha= .001, ind_alpha=.001, shapiro_alpha=.001)
start_time = time.time()
model05.fit(Y)
runTime[0] = time.time() - start_time

start_time = time.time()
model01.fit(Y)
runTime[1] = time.time() - start_time

start_time = time.time()
model001.fit(Y)
runTime[2] = time.time() - start_time

# Get adjacency matrix and compute ancestral relationships
adj_mat05 = model05.adjacency_matrix_
pd.DataFrame(adj_mat05).to_csv('temp/rcd_bap05_'+str(runInd)+'_'+str(simIndex)+'.csv')

### 01 ###
adj_mat01 = model001.adjacency_matrix_
pd.DataFrame(adj_mat01).to_csv('temp/rcd_bap01_'+str(runInd)+'_'+str(simIndex)+'.csv')

### 001 ###
adj_mat001 = model001.adjacency_matrix_
pd.DataFrame(adj_mat001).to_csv('temp/rcd_bap001_'+str(runInd)+'_'+str(simIndex)+'.csv')

pd.DataFrame(runTime).to_csv('temp/rcd_bap_time_'+str(runInd)+'_'+str(simIndex)+'.csv')




